{
  "0": "SELECT CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) FROM customers\t----- bird -----\tdebit_card_specializing",
  "1": "SELECT CustomerID FROM yearmonth WHERE SUBSTR(Date, 1, 4) = '2012' ORDER BY Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "2": "SELECT AVG(T1.Consumption) / 12 FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND SUBSTR(T1.Date, 1, 4) = '2013'\t----- bird -----\tdebit_card_specializing",
  "3": "SELECT\n  SUM(CASE WHEN T2.Currency = 'CZK' THEN T1.Consumption ELSE 0 END) - SUM(CASE WHEN T2.Currency = 'EUR' THEN T1.Consumption ELSE 0 END)\nFROM yearmonth AS T1\nJOIN customers AS T2\n  ON T1.CustomerID = T2.CustomerID\nWHERE\n  SUBSTR(T1.Date, 1, 4) = '2012';\t----- bird -----\tdebit_card_specializing",
  "4": "SELECT substr(Date, 1, 4) AS year FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = \"CZK\") GROUP BY year ORDER BY sum(Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
  "5": "SELECT\n  SUBSTR(Date, 1, 6) AS PeakMonth\nFROM yearmonth\nJOIN customers\n  ON yearmonth.CustomerID = customers.CustomerID\nWHERE\n  customers.Segment = 'SME' AND SUBSTR(Date, 1, 4) = '2013'\nGROUP BY\n  PeakMonth\nORDER BY\n  SUM(Consumption) DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "6": "SELECT\n  (\n    SELECT\n      AVG(T1.Consumption)\n    FROM yearmonth AS T1\n    JOIN customers AS T2\n      ON T1.CustomerID = T2.CustomerID\n    WHERE\n      SUBSTR(T1.Date, 1, 4) = '2013' AND T2.Currency = 'CZK' AND T2.Segment = 'SME'\n  ) - (\n    SELECT\n      AVG(T1.Consumption)\n    FROM yearmonth AS T1\n    JOIN customers AS T2\n      ON T1.CustomerID = T2.CustomerID\n    WHERE\n      SUBSTR(T1.Date, 1, 4) = '2013' AND T2.Currency = 'CZK' AND T2.Segment = 'LAM'\n  ),\n  (\n    SELECT\n      AVG(T1.Consumption)\n    FROM yearmonth AS T1\n    JOIN customers AS T2\n      ON T1.CustomerID = T2.CustomerID\n    WHERE\n      SUBSTR(T1.Date, 1, 4) = '2013' AND T2.Currency = 'CZK' AND T2.Segment = 'LAM'\n  ) - (\n    SELECT\n      AVG(T1.Consumption)\n    FROM yearmonth AS T1\n    JOIN customers AS T2\n      ON T1.CustomerID = T2.CustomerID\n    WHERE\n      SUBSTR(T1.Date, 1, 4) = '2013' AND T2.Currency = 'CZK' AND T2.Segment = 'KAM'\n  ),\n  (\n    SELECT\n      AVG(T1.Consumption)\n    FROM yearmonth AS T1\n    JOIN customers AS T2\n      ON T1.CustomerID = T2.CustomerID\n    WHERE\n      SUBSTR(T1.Date, 1, 4) = '2013' AND T2.Currency = 'CZK' AND T2.Segment = 'KAM'\n  ) - (\n    SELECT\n      AVG(T1.Consumption)\n    FROM yearmonth AS T1\n    JOIN customers AS T2\n      ON T1.CustomerID = T2.CustomerID\n    WHERE\n      SUBSTR(T1.Date, 1, 4) = '2013' AND T2.Currency = 'CZK' AND T2.Segment = 'SME'\n  );\t----- bird -----\tdebit_card_specializing",
  "7": "SELECT\n  (\n    SELECT\n      c.Segment\n    FROM yearmonth AS ym\n    JOIN customers AS c\n      ON ym.CustomerID = c.CustomerID\n    WHERE\n      c.Currency = 'EUR' AND substr(ym.Date, 1, 4) = '2013'\n    GROUP BY\n      c.Segment\n    ORDER BY\n      SUM(ym.Consumption) DESC\n    LIMIT 1\n  ) AS Biggest_Increase_Segment,\n  (\n    SELECT\n      c.Segment\n    FROM yearmonth AS ym\n    JOIN customers AS c\n      ON ym.CustomerID = c.CustomerID\n    WHERE\n      c.Currency = 'EUR' AND substr(ym.Date, 1, 4) = '2012'\n    GROUP BY\n      c.Segment\n    ORDER BY\n      SUM(ym.Consumption)\n    LIMIT 1\n  ) AS Lowest_Increase_Segment;\t----- bird -----\tdebit_card_specializing",
  "8": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
  "9": "SELECT (SELECT COUNT(*) FROM gasstations WHERE Country = \"CZE\" AND Segment = \"Discount\") - (SELECT COUNT(*) FROM gasstations WHERE Country = \"SVK\" AND Segment = \"Discount\");\t----- bird -----\tdebit_card_specializing",
  "10": "SELECT\n  CASE\n    WHEN SUM(CASE WHEN T1.Currency = 'CZK' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.Currency = 'EUR' THEN 1 ELSE 0 END)\n    THEN 'True'\n    ELSE 'False'\n  END,\n  SUM(CASE WHEN T1.Currency = 'CZK' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.Currency = 'EUR' THEN 1 ELSE 0 END)\nFROM Customers AS T1\nWHERE\n  T1.Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
  "11": "SELECT CAST(SUM(CASE WHEN T2.Consumption > 46.73 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CustomerID) FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
  "12": "SELECT CAST(SUM(CASE WHEN Consumption > 528.3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT CustomerID) FROM yearmonth WHERE substr(Date, 1, 6) = '201202'\t----- bird -----\tdebit_card_specializing",
  "13": "SELECT MAX(Consumption) FROM yearmonth WHERE SUBSTR(Date, 1, 4) = '2012';\t----- bird -----\tdebit_card_specializing",
  "14": "SELECT DISTINCT\n  p.Description\nFROM transactions_1k AS t\nJOIN products AS p\n  ON t.ProductID = p.ProductID\nWHERE\n  SUBSTR(t.Date, 1, 4) = '2013' AND SUBSTR(t.Date, 6, 2) = '09';\t----- bird -----\tdebit_card_specializing",
  "15": "SELECT DISTINCT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE strftime('%Y', T2.Date) = '2013' AND strftime('%m', T2.Date) = '06'\t----- bird -----\tdebit_card_specializing",
  "16": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = \"EUR\" GROUP BY T1.CustomerID HAVING SUM(T2.Consumption) > 1000\t----- bird -----\tdebit_card_specializing",
  "17": "SELECT DISTINCT\n  p.Description\nFROM products AS p\nJOIN transactions_1k AS t1 ON p.ProductID = t1.ProductID\nJOIN gasstations AS gs ON t1.GasStationID = gs.GasStationID\nWHERE\n  gs.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
  "18": "SELECT DISTINCT T1.Time FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11\t----- bird -----\tdebit_card_specializing",
  "19": "SELECT COUNT(T.TransactionID)\nFROM transactions_1k AS T\nINNER JOIN gasstations AS G ON T.GasStationID = G.GasStationID\nWHERE G.Country = 'CZE' AND T.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
  "20": "SELECT\n  T2.Currency\nFROM transactions_1k AS T1\nINNER JOIN customers AS T2\n  ON T1.CustomerID = T2.CustomerID\nWHERE\n  T1.Date = '2012-08-24' AND T1.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
  "21": "SELECT T1.Segment FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23' AND T2.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
  "22": "SELECT COUNT(T.TransactionID)\nFROM transactions_1k AS T\nJOIN gasstations AS G ON T.GasStationID = G.GasStationID\nWHERE G.Country = 'CZE'\n  AND T.Date = '2012-08-26'\n  AND T.Time BETWEEN '08:00:00' AND '09:00:00';\t----- bird -----\tdebit_card_specializing",
  "23": "SELECT\n  T1.Country\nFROM gasstations AS T1\nINNER JOIN transactions_1k AS T2\n  ON T1.GasStationID = T2.GasStationID\nWHERE\n  T2.Date = '2012-08-24' AND T2.Price = 548.4;\t----- bird -----\tdebit_card_specializing",
  "24": "SELECT CAST(SUM(CASE WHEN T1.Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
  "25": "SELECT\n  CAST(SUM(CASE WHEN STRFTIME('%Y', T1.Date) = '2012' THEN T1.Consumption ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.Date) = '2013' THEN T1.Consumption ELSE 0 END) AS REAL) * 1.0 / SUM(CASE WHEN STRFTIME('%Y', T1.Date) = '2012' THEN T1.Consumption ELSE 0 END)\nFROM yearmonth AS T1\nJOIN transactions_1k AS T2\n  ON T1.CustomerID = T2.CustomerID\nWHERE\n  T2.Price = 634.8 AND T2.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
  "26": "SELECT CAST(SUM(CASE WHEN Segment = 'premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM gasstations WHERE Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
  "27": "SELECT SUM(CASE WHEN T1.GasStationID IS NOT NULL THEN T1.Amount ELSE 0 END) AS total_amount_at_gas_stations,\n       SUM(CASE WHEN STRFTIME('%Y%m', T1.Date) = '201201' THEN T1.Amount ELSE 0 END) AS total_amount_jan_2012\nFROM transactions_1k AS T1\nWHERE T1.CustomerID = 38508;\t----- bird -----\tdebit_card_specializing",
  "28": "SELECT\n  T1.Currency,\n  SUM(T2.Price) / SUM(T2.Amount) AS avg_price\nFROM customers AS T1\nJOIN transactions_1k AS T2\n  ON T1.CustomerID = T2.CustomerID\nWHERE\n  T2.CustomerID = (\n    SELECT\n      CustomerID\n    FROM transactions_1k\n    GROUP BY\n      CustomerID\n    ORDER BY\n      SUM(Price) DESC\n    LIMIT 1\n  )\nGROUP BY\n  T1.Currency;\t----- bird -----\tdebit_card_specializing",
  "29": "SELECT T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.ProductID = 5 AND T1.Price / T1.Amount > 29.00 AND T2.Date = '201208'\t----- bird -----\tdebit_card_specializing",
  "30": "SELECT T2.major_name FROM Member AS T1 INNER JOIN Major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = \"Angela\" AND T1.last_name = \"Sanders\"\t----- bird -----\tstudent_club",
  "31": "SELECT COUNT(T1.member_id) FROM Member AS T1 INNER JOIN Attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN Event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = \"Women's Soccer\" AND T1.t_shirt_size = \"Medium\"\t----- bird -----\tstudent_club",
  "32": "SELECT COUNT(T1.event_id) FROM Event AS T1 INNER JOIN Attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'Meeting' GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 10\t----- bird -----\tstudent_club",
  "33": "SELECT T1.event_name\nFROM Event AS T1\nINNER JOIN Attendance AS T2 ON T1.event_id = T2.link_to_event\nWHERE T1.type != \"fundraiser\"\nGROUP BY T1.event_name\nHAVING COUNT(T2.link_to_event) > 20;\t----- bird -----\tstudent_club",
  "34": "SELECT T1.amount FROM Income AS T1 INNER JOIN Member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
  "35": "SELECT T1.first_name, T1.last_name FROM Member AS T1 INNER JOIN Zip_Code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = \"Illinois\"\t----- bird -----\tstudent_club",
  "36": "SELECT\n  CASE\n    WHEN COUNT(CASE WHEN T1.approved = 'TRUE' THEN 1 ELSE NULL END) = COUNT(T1.approved)\n    THEN 'yes'\n    ELSE 'no'\n  END\nFROM Expense AS T1\nINNER JOIN Budget AS T2\n  ON T1.link_to_budget = T2.budget_id\nINNER JOIN Event AS T3\n  ON T2.link_to_event = T3.event_id\nWHERE\n  T3.event_name = 'October Meeting' AND T3.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
  "37": "SELECT AVG(T1.cost) FROM Expense AS T1 INNER JOIN Member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = \"Elijah\" AND T2.last_name = \"Allen\" AND CAST(SUBSTR(T1.expense_date, 6, 2) AS INTEGER) IN (9, 10)\t----- bird -----\tstudent_club",
  "38": "SELECT\n  (\n    SELECT\n      SUM(T1.spent)\n    FROM Budget AS T1\n    INNER JOIN Event AS T2\n      ON T1.link_to_event = T2.event_id\n    WHERE\n      T2.type = 'Student_Club' AND STRFTIME('%Y', T2.event_date) = '2019'\n  ) - (\n    SELECT\n      SUM(T1.spent)\n    FROM Budget AS T1\n    INNER JOIN Event AS T2\n      ON T1.link_to_event = T2.event_id\n    WHERE\n      T2.type = 'Student_Club' AND STRFTIME('%Y', T2.event_date) = '2020'\n  );\t----- bird -----\tstudent_club",
  "39": "SELECT notes FROM Income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
  "40": "SELECT phone FROM Member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
  "41": "SELECT T1.event_status FROM Budget AS T1 JOIN Expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = \"Post Cards, Posters\" AND T2.expense_date = \"2019-08-20\"\t----- bird -----\tstudent_club",
  "42": "SELECT\n  T1.major_name\nFROM Major AS T1\nINNER JOIN Member AS T2\n  ON T1.major_id = T2.link_to_major\nWHERE\n  T2.first_name = 'Brent' AND T2.last_name = 'Thomason';\t----- bird -----\tstudent_club",
  "43": "SELECT COUNT(T1.member_id) FROM Member AS T1 INNER JOIN Major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = \"Business\" AND T1.t_shirt_size = \"Medium\"\t----- bird -----\tstudent_club",
  "44": "SELECT T2.department FROM Member AS T1 JOIN Major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
  "45": "SELECT\n  T1.date_received\nFROM Income AS T1\nINNER JOIN Member AS T2\n  ON T1.link_to_member = T2.member_id\nWHERE\n  T2.first_name = 'Connor' AND T2.last_name = 'Hilton' AND T1.source = 'Dues';\t----- bird -----\tstudent_club",
  "46": "SELECT\n  CAST(SUM(CASE WHEN T1.amount > T2.amount THEN 1 ELSE 0 END) AS REAL)\nFROM (\n  SELECT\n    amount\n  FROM Budget\n  WHERE\n    category = 'Advertisement' AND link_to_event = (\n      SELECT\n        event_id\n      FROM Event\n      WHERE\n        event_name = 'Yearly Kickoff'\n    )\n) AS T1\nINNER JOIN (\n  SELECT\n    amount\n  FROM Budget\n  WHERE\n    category = 'Advertisement' AND link_to_event = (\n      SELECT\n        event_id\n      FROM Event\n      WHERE\n        event_name = 'October Meeting'\n    )\n) AS T2;\t----- bird -----\tstudent_club",
  "47": "SELECT SUM(cost) FROM Expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
  "48": "SELECT count(DISTINCT city) FROM Zip_Code WHERE county = \"Orange County\" AND state = \"Virginia\"\t----- bird -----\tstudent_club",
  "49": "SELECT T2.major_name FROM Member AS T1 INNER JOIN Major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = \"809-555-3360\"\t----- bird -----\tstudent_club",
  "50": "SELECT COUNT(T1.link_to_member) FROM Attendance AS T1 INNER JOIN Event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = \"Women's Soccer\"\t----- bird -----\tstudent_club",
  "51": "SELECT T1.first_name, T1.last_name FROM Member AS T1 INNER JOIN Major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = \"School of Applied Sciences, Technology and Education\"\t----- bird -----\tstudent_club",
  "52": "SELECT T1.event_name FROM Event AS T1 JOIN Budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' AND T2.amount != 0 ORDER BY CAST(T2.spent AS REAL) / T2.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
  "53": "SELECT MAX(spent) FROM Budget\t----- bird -----\tstudent_club",
  "54": "SELECT SUM(spent) FROM Budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
  "55": "SELECT T1.first_name, T1.last_name FROM Member AS T1 INNER JOIN Attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id HAVING COUNT(T2.link_to_event) > 7\t----- bird -----\tstudent_club",
  "56": "SELECT DISTINCT\n  T1.first_name,\n  T1.last_name\nFROM Member AS T1\nINNER JOIN Expense AS T2\n  ON T1.member_id = T2.link_to_member\nINNER JOIN Budget AS T3\n  ON T2.link_to_budget = T3.budget_id\nINNER JOIN Event AS T4\n  ON T3.link_to_event = T4.event_id\nWHERE\n  T4.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
  "57": "SELECT T1.event_name FROM Event AS T1 JOIN Budget AS T2 ON T1.event_id = T2.link_to_event JOIN Expense AS T3 ON T2.budget_id = T3.link_to_budget ORDER BY T3.cost ASC LIMIT 1\t----- bird -----\tstudent_club",
  "58": "SELECT CAST(SUM(CASE WHEN T3.event_name = 'Yearly Kickoff' THEN T1.cost ELSE 0 END) AS REAL) * 100 / SUM(T1.cost) FROM Expense AS T1 JOIN Budget AS T2 ON T1.link_to_budget = T2.budget_id JOIN Event AS T3 ON T2.link_to_event = T3.event_id\t----- bird -----\tstudent_club",
  "59": "SELECT source FROM Income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
  "60": "SELECT COUNT(T1.member_id) FROM Member AS T1 INNER JOIN Major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
  "61": "SELECT T1.event_name FROM Event AS T1 JOIN Budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Advertisement' ORDER BY T2.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
  "62": "SELECT CASE WHEN COUNT(*) > 0 THEN 'Yes' ELSE 'No' END FROM Attendance WHERE link_to_member = (SELECT member_id FROM Member WHERE first_name = 'Maya' AND last_name = 'Mclean') AND link_to_event = (SELECT event_id FROM Event WHERE event_name = 'Women''s Soccer')\t----- bird -----\tstudent_club",
  "63": "SELECT T1.cost FROM Expense AS T1 INNER JOIN Budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN Event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = \"September Speaker\" AND T1.expense_description = \"Posters\"\t----- bird -----\tstudent_club",
  "64": "SELECT T1.event_name\nFROM Event AS T1\nJOIN Budget AS T2 ON T1.event_id = T2.link_to_event\nWHERE T1.status = 'Closed'\nORDER BY T2.remaining\nLIMIT 1;\t----- bird -----\tstudent_club",
  "65": "SELECT\n  T1.expense_description,\n  SUM(T1.cost)\nFROM Expense AS T1\nINNER JOIN Budget AS T2\n  ON T1.link_to_budget = T2.budget_id\nINNER JOIN Event AS T3\n  ON T2.link_to_event = T3.event_id\nWHERE\n  T3.event_name = 'October Meeting' AND T1.approved = 'TRUE'\nGROUP BY\n  T1.expense_description;\t----- bird -----\tstudent_club",
  "66": "SELECT\n  T1.category\nFROM Budget AS T1\nINNER JOIN Event AS T2\n  ON T1.link_to_event = T2.event_id\nWHERE\n  T2.event_name = 'April Speaker'\nGROUP BY\n  T1.category\nORDER BY\n  T1.amount ASC;\t----- bird -----\tstudent_club",
  "67": "SELECT SUM(cost) FROM Expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
  "68": "SELECT\n  T1.first_name,\n  T1.last_name,\n  SUM(T2.cost)\nFROM Member AS T1\nJOIN Expense AS T2\n  ON T1.member_id = T2.link_to_member\nWHERE\n  T1.member_id = 'rec4BLdZHS2Blfp4v';\t----- bird -----\tstudent_club",
  "69": "SELECT T1.expense_description FROM Expense AS T1 JOIN Member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = \"Sacha\" AND T2.last_name = \"Harrison\"\t----- bird -----\tstudent_club",
  "70": "SELECT DISTINCT T1.category FROM Budget AS T1 JOIN Event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = \"MU 215\"\t----- bird -----\tstudent_club",
  "71": "SELECT\n  T1.last_name,\n  T2.department,\n  T2.college\nFROM Member AS T1\nINNER JOIN Major AS T2\n  ON T1.link_to_major = T2.major_id\nWHERE\n  T2.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
  "72": "SELECT T1.category FROM Budget AS T1 INNER JOIN Event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215' AND T2.type = 'Guest Speaker' AND T1.spent = 0\t----- bird -----\tstudent_club",
  "73": "SELECT CAST(SUM(CASE WHEN T2.amount = 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.member_id) FROM Member AS T1 INNER JOIN Income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
  "74": "SELECT event_name AS game FROM Event WHERE status = 'Closed' AND type = 'Game' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
  "75": "SELECT T2.first_name, T2.last_name, T2.phone FROM Expense AS T1 INNER JOIN Member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost > (SELECT avg(cost) FROM Expense)\t----- bird -----\tstudent_club",
  "76": "SELECT T1.first_name, T1.last_name, T2.cost FROM Member AS T1 INNER JOIN Expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
  "77": "SELECT\n  T1.first_name,\n  T1.last_name,\n  T2.amount\nFROM Member AS T1\nJOIN Income AS T2\n  ON T1.member_id = T2.link_to_member\nWHERE\n  T2.date_received = '9/9/2019';\t----- bird -----\tstudent_club",
  "78": "SELECT\n  CASE\n    WHEN (\n      SELECT\n        COUNT(ID)\n      FROM Patient\n      WHERE\n        SEX = 'M' AND Admission = '+'\n    ) > (\n      SELECT\n        COUNT(ID)\n      FROM Patient\n      WHERE\n        SEX = 'M' AND Admission = '-'\n    )\n    THEN 'More in-patients'\n    ELSE 'More outpatients'\n  END,\n  ABS(\n    (\n      CAST(\n        (\n          SELECT\n            COUNT(ID)\n          FROM Patient\n          WHERE\n            SEX = 'M' AND Admission = '+'\n        ) AS REAL\n      ) / (\n        SELECT\n          COUNT(ID)\n        FROM Patient\n        WHERE\n          SEX = 'M' AND Admission = '-'\n      )\n    ) - 1\n  ) * 100;\t----- bird -----\tthrombosis_prediction",
  "79": "SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', Birthday) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE SEX = 'F'\t----- bird -----\tthrombosis_prediction",
  "80": "SELECT CAST(SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) FROM Patient WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
  "81": "SELECT\n  p.Diagnosis,\n  l.Date\nFROM Patient AS p\nJOIN Laboratory AS l\n  ON p.ID = l.ID\nWHERE\n  p.ID = '30609';\t----- bird -----\tthrombosis_prediction",
  "82": "SELECT\n  p.ID,\n  p.SEX,\n  p.Birthday\nFROM Patient AS p\nJOIN Laboratory AS l\n  ON p.ID = l.ID\nWHERE\n  l.LDH > 500;\t----- bird -----\tthrombosis_prediction",
  "83": "SELECT P.ID, SUBSTR(CAST(strftime('%Y', 'now') - strftime('%Y', P.Birthday) AS TEXT), 1, 4) AS Age FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
  "84": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
  "85": "SELECT\n  COUNT(ID)\nFROM Patient\nWHERE\n  SEX = 'F' AND STRFTIME('%Y', Description) = '1997' AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
  "86": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 1 AND T1.SEX = 'F' AND substr(T2.\"Examination Date\", 1, 4) = '1997'\t----- bird -----\tthrombosis_prediction",
  "87": "SELECT\n  T1.Symptoms,\n  T1.Diagnosis\nFROM Examination AS T1\nJOIN Patient AS T2\n  ON T1.ID = T2.ID\nWHERE\n  T1.Symptoms IS NOT NULL\nORDER BY\n  T2.Birthday DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "88": "SELECT T1.Date, CAST(strftime('%Y', T2.\"First Date\") AS INTEGER) - CAST(strftime('%Y', T2.Birthday) AS INTEGER) FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = \"SJS\" ORDER BY T2.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "89": "SELECT\n  CAST(SUM(CASE WHEN T1.SEX = 'M' AND T2.UA <= 8.0 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.SEX = 'F' AND T2.UA <= 6.5 THEN 1 ELSE 0 END)\nFROM Patient AS T1\nINNER JOIN Laboratory AS T2\n  ON T1.ID = T2.ID;\t----- bird -----\tthrombosis_prediction",
  "90": "SELECT COUNT(DISTINCT T1.ID)\nFROM Patient AS T1\nINNER JOIN Examination AS T2 ON T1.ID = T2.ID\nWHERE CAST(SUBSTR(T2.\"Examination Date\", 1, 4) AS INTEGER) BETWEEN 1990 AND 1993\nAND CAST(SUBSTR(T1.Birthday, 1, 4) AS INTEGER) > (1993 - 18)\t----- bird -----\tthrombosis_prediction",
  "91": "SELECT\n  CAST(STRFTIME('%Y', T1.\"Examination Date\") AS INTEGER) - CAST(STRFTIME('%Y', T2.Birthday) AS INTEGER),\n  T2.Diagnosis\nFROM Examination AS T1\nINNER JOIN Patient AS T2\n  ON T1.ID = T2.ID\nINNER JOIN Laboratory AS T3\n  ON T1.ID = T3.ID\nWHERE\n  T3.HGB = (\n    SELECT\n      MAX(HGB)\n    FROM Laboratory\n  );\t----- bird -----\tthrombosis_prediction",
  "92": "SELECT\n  T1.\"aCL IgM\"\nFROM Examination AS T1\nINNER JOIN Patient AS T2\n  ON T1.ID = T2.ID\nWHERE\n  T2.Diagnosis = 'SLE' AND T2.Description = '1994-02-19' AND T1.\"Examination Date\" = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
  "93": "SELECT\n  CAST(SUM(CASE WHEN T2.Date LIKE '1981-11%' THEN T2.\"T-CHO\" ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '1981-12%' THEN T2.\"T-CHO\" ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.Date LIKE '1981-11%' THEN T2.\"T-CHO\" ELSE 0 END)\nFROM Patient AS T1\nJOIN Laboratory AS T2\n  ON T1.ID = T2.ID\nWHERE\n  T1.Birthday = '1959-02-18' AND (\n    T2.Date LIKE '1981-11%' OR T2.Date LIKE '1981-12%'\n  );\t----- bird -----\tthrombosis_prediction",
  "94": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4\t----- bird -----\tthrombosis_prediction",
  "95": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 2 AND T1.\"ANA Pattern\" = 'S' AND T1.\"aCL IgM\" > (SELECT AVG(\"aCL IgM\") * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
  "96": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.Date LIKE '9110%' AND T2.\"T-BIL\" < 2.0\t----- bird -----\tthrombosis_prediction",
  "97": "SELECT AVG(T1.ALB) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T2.Diagnosis = 'SLE' AND T1.PLT > 400\t----- bird -----\tthrombosis_prediction",
  "98": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
  "99": "SELECT CAST(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient WHERE strftime('%Y', Birthday) = '1980' AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
  "100": "SELECT\n  CASE\n    WHEN T1.SEX = 'M' AND T2.UA > 8.0\n    THEN 'Yes'\n    WHEN T1.SEX = 'F' AND T2.UA > 6.5\n    THEN 'Yes'\n    ELSE 'No'\n  END\nFROM Patient AS T1\nINNER JOIN Laboratory AS T2\n  ON T1.ID = T2.ID\nWHERE\n  T1.ID = 57266;\t----- bird -----\tthrombosis_prediction",
  "101": "SELECT DISTINCT\n  T1.ID\nFROM Patient AS T1\nINNER JOIN Laboratory AS T2\n  ON T1.ID = T2.ID\nWHERE\n  T1.SEX = 'M' AND T2.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
  "102": "SELECT T1.Diagnosis FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT > 60 ORDER BY T1.Birthday ASC\t----- bird -----\tthrombosis_prediction",
  "103": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN = 29\t----- bird -----\tthrombosis_prediction",
  "104": "SELECT\n  P.SEX,\n  GROUP_CONCAT(DISTINCT P.ID)\nFROM Patient AS P\nJOIN Laboratory AS L\n  ON P.ID = L.ID\nWHERE\n  L.\"T-BIL\" >= 2.0\nGROUP BY\n  P.SEX;\t----- bird -----\tthrombosis_prediction",
  "105": "SELECT CAST(SUM(STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday)) AS REAL) / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.\"T-CHO\" >= 250;\t----- bird -----\tthrombosis_prediction",
  "106": "SELECT COUNT(DISTINCT T1.ID)\nFROM Patient AS T1\nJOIN Laboratory AS T2 ON T1.ID = T2.ID\nWHERE T2.TG >= 200\nAND STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday) > 50;\t----- bird -----\tthrombosis_prediction",
  "107": "SELECT COUNT(DISTINCT T1.ID)\nFROM Patient AS T1\nJOIN Laboratory AS T2 ON T1.ID = T2.ID\nWHERE T1.SEX = 'M'\n  AND SUBSTR(T1.Birthday, 1, 4) BETWEEN '1936' AND '1956'\n  AND T2.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
  "108": "SELECT\n  P.ID,\n  P.SEX,\n  CAST(SUBSTR(DATE('now'), 1, 4) AS INTEGER) - CAST(SUBSTR(P.Birthday, 1, 4) AS INTEGER)\nFROM Patient AS P\nINNER JOIN Laboratory AS L\n  ON P.ID = L.ID\nWHERE\n  L.GLU >= 180 AND L.\"T-CHO\" < 250;\t----- bird -----\tthrombosis_prediction",
  "109": "SELECT\n  T1.Diagnosis,\n  T1.ID,\n  CAST(SUBSTR(STRFTIME('%Y', 'now'), 3, 2) AS INTEGER) - CAST(SUBSTR(STRFTIME('%Y', T1.Birthday), 3, 2) AS INTEGER)\nFROM Patient AS T1\nINNER JOIN Laboratory AS T2\n  ON T1.ID = T2.ID\nWHERE\n  T2.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
  "110": "SELECT\n  T1.ID,\n  T1.SEX\nFROM Patient AS T1\nINNER JOIN Laboratory AS T2\n  ON T1.ID = T2.ID\nWHERE\n  T1.Diagnosis = 'SLE' AND T2.HGB > 10 AND T2.HGB < 17\nORDER BY\n  T1.Birthday\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "111": "SELECT\n  T1.ID,\n  CAST(SUBSTR(DATE('now'), 1, 4) AS INTEGER) - CAST(SUBSTR(T1.Birthday, 1, 4) AS INTEGER) AS Age\nFROM Patient AS T1\nINNER JOIN (\n  SELECT\n    ID\n  FROM Laboratory\n  WHERE\n    HCT >= 52\n  GROUP BY\n    ID\n  HAVING\n    COUNT(ID) >= 2\n) AS T2\n  ON T1.ID = T2.ID;\t----- bird -----\tthrombosis_prediction",
  "112": "SELECT\n  SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END)\nFROM Laboratory\nWHERE\n  PLT <= 100 OR PLT >= 400;\t----- bird -----\tthrombosis_prediction",
  "113": "SELECT T1.ID\nFROM Patient AS T1\nINNER JOIN Laboratory AS T2 ON T1.ID = T2.ID\nWHERE\n  SUBSTR(T2.Date, 1, 4) = '1984' AND CAST(SUBSTR(strftime('%Y', 'now'), 1, 4) AS INTEGER) - CAST(SUBSTR(T1.Birthday, 1, 4) AS INTEGER) < 50 AND T2.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
  "114": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' AND T2.PT >= 14 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.PT >= 14 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday)) > 55\t----- bird -----\tthrombosis_prediction",
  "115": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND (T2.FG <= 150 OR T2.FG >= 450)\t----- bird -----\tthrombosis_prediction",
  "116": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE IGG >= 2000\t----- bird -----\tthrombosis_prediction",
  "117": "SELECT COUNT(T1.ID)\nFROM Laboratory AS T1\nINNER JOIN Examination AS T2 ON T1.ID = T2.ID\nWHERE T1.IGG > 900 AND T1.IGG < 2000 AND T2.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "118": "SELECT COUNT(DISTINCT T1.ID)\nFROM Patient AS T1\nINNER JOIN Laboratory AS T2 ON T1.ID = T2.ID\nWHERE T1.`First Date` >= '1990-01-01' AND T2.IGA > 80 AND T2.IGA < 500;\t----- bird -----\tthrombosis_prediction",
  "119": "SELECT Diagnosis FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE IGM <= 40 OR IGM >= 400) GROUP BY Diagnosis ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "120": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP = '+' AND T1.Description IS NULL\t----- bird -----\tthrombosis_prediction",
  "121": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.CRE >= 1.5 AND CAST(SUBSTR(DATE('now'), 1, 4) AS INTEGER) - CAST(SUBSTR(T2.Birthday, 1, 4) AS INTEGER) < 70\t----- bird -----\tthrombosis_prediction",
  "122": "SELECT COUNT(DISTINCT T1.ID)\nFROM Patient AS T1\nINNER JOIN Laboratory AS T2 ON T1.ID = T2.ID\nWHERE T1.Admission = '+' AND (T2.RNP = '-' OR T2.RNP = '+-');\t----- bird -----\tthrombosis_prediction",
  "123": "SELECT COUNT(DISTINCT T1.ID)\nFROM Laboratory AS T1\nINNER JOIN Examination AS T2 ON T1.ID = T2.ID\nWHERE T1.SM IN ('-', '+-') AND T2.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
  "124": "SELECT COUNT(DISTINCT T1.ID)\nFROM Patient AS T1\nINNER JOIN Examination AS T2 ON T1.ID = T2.ID\nINNER JOIN Laboratory AS T3 ON T1.ID = T3.ID\nWHERE T1.SEX = 'F'\nAND T2.Symptoms IS NULL\nAND T3.SC170 IN ('negative', '0');\t----- bird -----\tthrombosis_prediction",
  "125": "SELECT count(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA IN ('-', '+-') AND T2.SSB IN ('-', '+-') AND T1.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
  "126": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT >= 60 ORDER BY T1.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
  "127": "SELECT COUNT(DISTINCT T1.ID)\nFROM Laboratory AS T1\nINNER JOIN Examination AS T2 ON T1.ID = T2.ID\nWHERE T1.CPK < 250 AND (T2.KCT = \"+\" OR T2.RVVT = \"+\" OR T2.LAC = \"+\");\t----- bird -----\tthrombosis_prediction",
  "128": "SELECT T1.name FROM League AS T1 JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2015/2016' GROUP BY T1.name ORDER BY sum(T2.home_team_goal + T2.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
  "129": "SELECT\n  T1.team_long_name\nFROM Team AS T1\nINNER JOIN Match AS T2\n  ON T1.team_api_id = T2.away_team_api_id\nWHERE\n  T2.league_id = (\n    SELECT\n      id\n    FROM League\n    WHERE\n      name = 'Scotland Premier League'\n  )\n  AND T2.season = '2009/2010'\n  AND T2.away_team_goal > T2.home_team_goal\nGROUP BY\n  T1.team_long_name\nORDER BY\n  COUNT(T1.team_long_name) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "130": "SELECT\n  buildUpPlaySpeed\nFROM Team_Attributes\nORDER BY\n  buildUpPlaySpeed DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
  "131": "SELECT\n  T1.name\nFROM League AS T1\nINNER JOIN Match AS T2\n  ON T1.id = T2.league_id\nWHERE\n  T2.season = '2015/2016' AND T2.home_team_goal = T2.away_team_goal\nGROUP BY\n  T1.name\nORDER BY\n  COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "132": "SELECT DISTINCT\n  CAST(STRFTIME('%Y', 'now') AS INTEGER) - CAST(STRFTIME('%Y', T1.birthday) AS INTEGER)\nFROM Player AS T1\nINNER JOIN Player_Attributes AS T2\n  ON T1.player_api_id = T2.player_api_id\nWHERE\n  T2.sprint_speed >= 97 AND STRFTIME('%Y', T2.date) BETWEEN '2013' AND '2015';\t----- bird -----\teuropean_football_2",
  "133": "SELECT\n  T1.name,\n  COUNT(T2.id)\nFROM League AS T1\nJOIN Match AS T2\n  ON T1.id = T2.league_id\nGROUP BY\n  T1.name\nORDER BY\n  COUNT(T2.id) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "134": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
  "135": "SELECT T1.team_long_name FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE STRFTIME('%Y', T2.date) = '2012' AND T2.buildUpPlayPassing > (SELECT avg(buildUpPlayPassing) FROM Team_Attributes WHERE STRFTIME('%Y', date) = '2012')\t----- bird -----\teuropean_football_2",
  "136": "SELECT\n  CAST(SUM(CASE WHEN T1.preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.player_api_id)\nFROM Player_Attributes AS T1\nINNER JOIN Player AS T2\n  ON T1.player_api_id = T2.player_api_id\nWHERE\n  CAST(SUBSTR(T2.birthday, 1, 4) AS INTEGER) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
  "137": "SELECT AVG(T2.long_shots) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = \"Ahmed Samir Farag\"\t----- bird -----\teuropean_football_2",
  "138": "SELECT\n  T1.player_name\nFROM Player AS T1\nINNER JOIN Player_Attributes AS T2\n  ON T1.player_api_id = T2.player_api_id\nWHERE\n  T1.height > 180\nGROUP BY\n  T1.player_name\nORDER BY\n  AVG(T2.heading_accuracy) DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
  "139": "SELECT\n  T1.name\nFROM League AS T1\nJOIN Match AS T2\n  ON T1.id = T2.league_id\nWHERE\n  T2.season = '2009/2010'\nGROUP BY\n  T1.name\nHAVING\n  AVG(T2.home_team_goal) > AVG(T2.away_team_goal);\t----- bird -----\teuropean_football_2",
  "140": "SELECT player_name\nFROM Player\nWHERE substr(birthday, 1, 4) = '1970' AND substr(birthday, 6, 2) = '10';\t----- bird -----\teuropean_football_2",
  "141": "SELECT\n  PA.overall_rating\nFROM Player AS P\nJOIN Player_Attributes AS PA\n  ON P.player_api_id = PA.player_api_id\nWHERE\n  P.player_name = 'Gabriel Tamas' AND STRFTIME('%Y', PA.date) = '2011';\t----- bird -----\teuropean_football_2",
  "142": "SELECT AVG(M.home_team_goal)\nFROM Match AS M\nJOIN Country AS C ON M.country_id = C.id\nWHERE C.name = 'Poland' AND M.season = '2010/2011';\t----- bird -----\teuropean_football_2",
  "143": "SELECT\n  P.player_name\nFROM Player AS P\nJOIN Player_Attributes AS PA\n  ON P.player_api_id = PA.player_api_id\nWHERE\n  P.height IN (\n    (\n      SELECT\n        MAX(height)\n      FROM Player\n    ),\n    (\n      SELECT\n        MIN(height)\n      FROM Player\n    )\n  )\nGROUP BY\n  P.player_name\nORDER BY\n  AVG(PA.finishing) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "144": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.height > 170 AND STRFTIME('%Y', T1.date) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
  "145": "SELECT\n  (\n    SELECT\n      AVG(T1.ball_control)\n    FROM Player_Attributes AS T1\n    INNER JOIN Player AS T2\n      ON T1.player_api_id = T2.player_api_id\n    WHERE\n      T2.player_name = 'Abdou Diallo'\n  ) - (\n    SELECT\n      AVG(T1.ball_control)\n    FROM Player_Attributes AS T1\n    INNER JOIN Player AS T2\n      ON T1.player_api_id = T2.player_api_id\n    WHERE\n      T2.player_name = 'Aaron Appindangoye'\n  );\t----- bird -----\teuropean_football_2",
  "146": "SELECT\n  CASE\n    WHEN (\n      SELECT\n        birthday\n      FROM Player\n      WHERE\n        player_name = 'Aaron Lennon'\n    ) < (\n      SELECT\n        birthday\n      FROM Player\n      WHERE\n        player_name = 'Abdelaziz Barrada'\n    )\n    THEN 'Aaron Lennon'\n    ELSE 'Abdelaziz Barrada'\n  END;\t----- bird -----\teuropean_football_2",
  "147": "SELECT\n  player_name\nFROM Player\nWHERE\n  height = (\n    SELECT\n      MAX(height)\n    FROM Player\n  );\t----- bird -----\teuropean_football_2",
  "148": "SELECT COUNT(*)\nFROM Player_Attributes\nWHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
  "149": "SELECT COUNT(DISTINCT T1.player_api_id)\nFROM Player AS T1\nINNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id\nWHERE T2.defensive_work_rate = 'high' AND strftime('%Y', T1.birthday) < '1986'\t----- bird -----\teuropean_football_2",
  "150": "SELECT DISTINCT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.volleys > 70 AND T2.dribbling > 70\t----- bird -----\teuropean_football_2",
  "151": "SELECT COUNT(M.id) FROM Match AS M JOIN League AS L ON M.league_id = L.id WHERE L.name = \"Belgium Jupiler League\" AND SUBSTR(M.date, 1, 7) = \"2009-04\"\t----- bird -----\teuropean_football_2",
  "152": "SELECT T1.name FROM League AS T1 JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2008/2009' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
  "153": "SELECT\n  CAST(\n    (\n      (\n        SELECT\n          overall_rating\n        FROM Player_Attributes\n        WHERE\n          player_api_id = (\n            SELECT\n              player_api_id\n            FROM Player\n            WHERE\n              player_name = 'Ariel Borysiuk'\n          )\n        ORDER BY\n          date DESC\n        LIMIT 1\n      ) - (\n        SELECT\n          overall_rating\n        FROM Player_Attributes\n        WHERE\n          player_api_id = (\n            SELECT\n              player_api_id\n            FROM Player\n            WHERE\n              player_name = 'Paulin Puel'\n          )\n        ORDER BY\n          date DESC\n        LIMIT 1\n      )\n    ) AS REAL\n  ) * 100 / (\n    SELECT\n      overall_rating\n    FROM Player_Attributes\n    WHERE\n      player_api_id = (\n        SELECT\n          player_api_id\n        FROM Player\n        WHERE\n          player_name = 'Paulin Puel'\n      )\n    ORDER BY\n      date DESC\n    LIMIT 1\n  );\t----- bird -----\teuropean_football_2",
  "154": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = \"Pietro Marino\"\t----- bird -----\teuropean_football_2",
  "155": "SELECT MAX(T1.chanceCreationPassing), T1.chanceCreationPassingClass\nFROM Team_Attributes AS T1\nINNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id\nWHERE T2.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
  "156": "SELECT\n  T1.player_name\nFROM Player AS T1\nINNER JOIN Player_Attributes AS T2\n  ON T1.player_api_id = T2.player_api_id\nWHERE\n  T2.overall_rating = 77 AND T2.date LIKE '2016-06-23%'\nORDER BY\n  T1.birthday\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "157": "SELECT\n  pa.overall_rating\nFROM Player AS p\nJOIN Player_Attributes AS pa\n  ON p.player_api_id = pa.player_api_id\nWHERE\n  p.player_name = 'Aaron Mooy' AND pa.date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
  "158": "SELECT\n  T1.attacking_work_rate\nFROM Player_Attributes AS T1\nINNER JOIN Player AS T2\n  ON T1.player_api_id = T2.player_api_id\nWHERE\n  T2.player_name = 'Francesco Migliore' AND T1.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
  "159": "SELECT\n  date\nFROM Player_Attributes\nWHERE\n  player_api_id = (\n    SELECT\n      player_api_id\n    FROM Player\n    WHERE\n      player_name = 'Kevin Constant'\n  )\nORDER BY\n  crossing DESC,\n  date ASC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "160": "SELECT\n  T1.buildUpPlayPassingClass\nFROM Team_Attributes AS T1\nINNER JOIN Team AS T2\n  ON T1.team_api_id = T2.team_api_id\nWHERE\n  T2.team_long_name = 'FC Lorient' AND T1.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
  "161": "SELECT\n  T1.defenceAggressionClass\nFROM Team_Attributes AS T1\nINNER JOIN Team AS T2\n  ON T1.team_api_id = T2.team_api_id\nWHERE\n  T2.team_long_name = 'Hannover 96' AND T1.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
  "162": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = \"Marko Arnautovic\" AND T1.date BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
  "163": "SELECT\n  CAST(SUM(CASE WHEN T2.player_name = 'Landon Donovan' THEN T1.overall_rating ELSE 0 END - CASE WHEN T2.player_name = 'Jordan Bowery' THEN T1.overall_rating ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.player_name = 'Landon Donovan' THEN T1.overall_rating ELSE 0 END)\nFROM Player_Attributes AS T1\nINNER JOIN Player AS T2\n  ON T1.player_api_id = T2.player_api_id\nWHERE\n  T1.date = '2013-07-12' AND T2.player_name IN ('Landon Donovan', 'Jordan Bowery');\t----- bird -----\teuropean_football_2",
  "164": "SELECT player_name\nFROM Player\nORDER BY height DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "165": "SELECT\n  p.player_name\nFROM Player AS p\nJOIN Player_Attributes AS pa\n  ON p.player_api_id = pa.player_api_id\nWHERE\n  pa.overall_rating = (\n    SELECT\n      MAX(overall_rating)\n    FROM Player_Attributes\n  );\t----- bird -----\teuropean_football_2",
  "166": "SELECT DISTINCT T1.player_name\nFROM Player AS T1\nINNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id\nWHERE T2.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
  "167": "SELECT\n  T2.team_short_name\nFROM Team_Attributes AS T1\nINNER JOIN Team AS T2\n  ON T1.team_api_id = T2.team_api_id\nWHERE\n  T1.chanceCreationPassingClass = 'Safe'\nGROUP BY\n  T2.team_short_name;\t----- bird -----\teuropean_football_2",
  "168": "SELECT COUNT(id)\nFROM Player\nWHERE player_name LIKE 'Aaron%' AND birthday > '1990-12-31'\t----- bird -----\teuropean_football_2",
  "169": "SELECT\n  (\n    SELECT\n      jumping\n    FROM Player_Attributes\n    WHERE\n      player_api_id = (\n        SELECT\n          player_api_id\n        FROM Player\n        WHERE\n          id = 6\n      )\n    ORDER BY\n      date DESC\n    LIMIT 1\n  ) - (\n    SELECT\n      jumping\n    FROM Player_Attributes\n    WHERE\n      player_api_id = (\n        SELECT\n          player_api_id\n        FROM Player\n        WHERE\n          id = 23\n      )\n    ORDER BY\n      date DESC\n    LIMIT 1\n  );\t----- bird -----\teuropean_football_2",
  "170": "SELECT player_api_id\nFROM Player_Attributes\nWHERE potential = (SELECT MIN(potential) FROM Player_Attributes) AND preferred_foot = 'right'\nLIMIT 4;\t----- bird -----\teuropean_football_2",
  "171": "SELECT COUNT(T1.player_api_id) FROM Player_Attributes AS T1 INNER JOIN (SELECT MAX(crossing) AS max_crossing FROM Player_Attributes WHERE preferred_foot = 'left') AS T2 ON T1.crossing = T2.max_crossing WHERE T1.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
  "172": "SELECT\n  T1.home_team_goal,\n  T1.away_team_goal\nFROM Match AS T1\nINNER JOIN League AS T2\n  ON T1.league_id = T2.id\nWHERE\n  T2.name = 'Belgium Jupiler League' AND T1.date LIKE '2008-09-24%';\t----- bird -----\teuropean_football_2",
  "173": "SELECT\n  T1.buildUpPlaySpeedClass\nFROM Team_Attributes AS T1\nINNER JOIN Team AS T2\n  ON T1.team_api_id = T2.team_api_id\nWHERE\n  T2.team_long_name = 'KSV Cercle Brugge'\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "174": "SELECT T2.finishing, T2.curve FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.weight = ( SELECT max(weight) FROM Player )\t----- bird -----\teuropean_football_2",
  "175": "SELECT\n  T2.name\nFROM Match AS T1\nINNER JOIN League AS T2\n  ON T1.league_id = T2.id\nWHERE\n  T1.season = '2015/2016'\nGROUP BY\n  T2.name\nORDER BY\n  COUNT(T1.id) DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
  "176": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_api_id = T2.away_team_api_id WHERE T2.away_team_goal = (SELECT MAX(away_team_goal) FROM Match)\t----- bird -----\teuropean_football_2",
  "177": "SELECT\n  T1.player_name\nFROM Player AS T1\nINNER JOIN Player_Attributes AS T2\n  ON T1.player_api_id = T2.player_api_id\nWHERE\n  T2.overall_rating = (\n    SELECT\n      MAX(overall_rating)\n    FROM Player_Attributes\n  )\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "178": "SELECT CAST(SUM(CASE WHEN T1.height < 180 AND T2.overall_rating > 70 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id\t----- bird -----\teuropean_football_2",
  "179": "SELECT T1.driverRef FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 20 ORDER BY T2.q1 DESC LIMIT 5\t----- bird -----\tformula_1",
  "180": "SELECT T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 19 AND T2.q2 IS NOT NULL ORDER BY T2.q2 ASC LIMIT 1\t----- bird -----\tformula_1",
  "181": "SELECT\n  T1.name\nFROM races AS T1\nINNER JOIN circuits AS T2\n  ON T1.circuitId = T2.circuitId\nWHERE\n  T2.country = 'Germany';\t----- bird -----\tformula_1",
  "182": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
  "183": "SELECT\n  T1.lat,\n  T1.lng\nFROM circuits AS T1\nINNER JOIN races AS T2\n  ON T1.circuitId = T2.circuitId\nWHERE\n  T2.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
  "184": "SELECT\n  T1.q1\nFROM qualifying AS T1\nINNER JOIN drivers AS T2\n  ON T1.driverId = T2.driverId\nWHERE\n  T2.forename = 'Bruno' AND T2.surname = 'Senna' AND T1.raceId = 354;\t----- bird -----\tformula_1",
  "185": "SELECT T1.number FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 903 AND T2.q3 = '1:54.000'\t----- bird -----\tformula_1",
  "186": "SELECT COUNT(T1.driverId) FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T2.name = \"Bahrain Grand Prix\" AND T2.year = 2007 AND T3.status != \"Finished\"\t----- bird -----\tformula_1",
  "187": "SELECT T1.driverRef FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 592 AND T2.time IS NOT NULL ORDER BY T1.dob ASC LIMIT 1\t----- bird -----\tformula_1",
  "188": "SELECT T1.url FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 161 AND T2.time = '1:27.052'\t----- bird -----\tformula_1",
  "189": "SELECT\n  T1.lat,\n  T1.lng\nFROM circuits AS T1\nINNER JOIN races AS T2\n  ON T1.circuitId = T2.circuitId\nWHERE\n  T2.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
  "190": "SELECT T2.url FROM constructorResults AS T1 JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = 9 ORDER BY T1.points DESC LIMIT 1\t----- bird -----\tformula_1",
  "191": "SELECT\n  T2.code\nFROM qualifying AS T1\nINNER JOIN drivers AS T2\n  ON T1.driverId = T2.driverId\nWHERE\n  T1.raceId = 45 AND T1.q3 = '1:33.049';\t----- bird -----\tformula_1",
  "192": "SELECT\n  T1.url\nFROM seasons AS T1\nINNER JOIN races AS T2\n  ON T1.year = T2.year\nWHERE\n  T2.raceId = 901;\t----- bird -----\tformula_1",
  "193": "SELECT forename, surname FROM drivers WHERE driverId IN (SELECT driverId FROM results WHERE raceId = 872 AND time IS NOT NULL) ORDER BY dob DESC LIMIT 1\t----- bird -----\tformula_1",
  "194": "SELECT T2.nationality FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
  "195": "SELECT\n  CAST(\n    (\n      (\n        SELECT\n          fastestLapSpeed\n        FROM results\n        WHERE\n          raceId = 853\n          AND driverId = (\n            SELECT\n              driverId\n            FROM drivers\n            WHERE\n              forename = 'Paul' AND surname = 'di Resta'\n          )\n      ) - (\n        SELECT\n          fastestLapSpeed\n        FROM results\n        WHERE\n          raceId = 854\n          AND driverId = (\n            SELECT\n              driverId\n            FROM drivers\n            WHERE\n              forename = 'Paul' AND surname = 'di Resta'\n          )\n      )\n    ) * 100 AS REAL\n  ) / (\n    SELECT\n      fastestLapSpeed\n    FROM results\n    WHERE\n      raceId = 853\n      AND driverId = (\n        SELECT\n          driverId\n        FROM drivers\n        WHERE\n          forename = 'Paul' AND surname = 'di Resta'\n      )\n  );\t----- bird -----\tformula_1",
  "196": "SELECT CAST(SUM(CASE WHEN time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(driverId) AS percentage FROM results WHERE raceId = (SELECT raceId FROM races WHERE DATE = '1983-07-16')\t----- bird -----\tformula_1",
  "197": "SELECT name FROM races WHERE STRFTIME('%Y', date) = (SELECT STRFTIME('%Y', MIN(date)) FROM races) AND STRFTIME('%m', date) = (SELECT STRFTIME('%m', MIN(date)) FROM races)\t----- bird -----\tformula_1",
  "198": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId ORDER BY T2.points DESC LIMIT 1\t----- bird -----\tformula_1",
  "199": "SELECT T2.forename, T2.surname, T3.name FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T1.milliseconds = ( SELECT min( milliseconds ) FROM lapTimes ) LIMIT 1\t----- bird -----\tformula_1",
  "200": "SELECT AVG(milliseconds)\nFROM lapTimes\nWHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\nAND raceId = (SELECT raceId FROM races WHERE year = 2009 AND name = 'Malaysian Grand Prix');\t----- bird -----\tformula_1",
  "201": "SELECT CAST(SUM(CASE WHEN T2.position > 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.raceId) FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.surname = \"Hamilton\" AND T1.year >= 2010\t----- bird -----\tformula_1",
  "202": "SELECT\n  T1.forename,\n  T1.surname,\n  T1.nationality,\n  MAX(T2.points)\nFROM drivers AS T1\nINNER JOIN driverStandings AS T2\n  ON T1.driverId = T2.driverId\nGROUP BY\n  T1.driverId\nORDER BY\n  SUM(T2.wins) DESC\nLIMIT 1;\t----- bird -----\tformula_1",
  "203": "SELECT CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', dob) AS INTEGER), forename, surname FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1\t----- bird -----\tformula_1",
  "204": "SELECT\n  r.name,\n  c.name,\n  c.location\nFROM races AS r\nINNER JOIN circuits AS c\n  ON r.circuitId = c.circuitId\nWHERE\n  CAST(strftime('%m', r.date) AS INTEGER) = 9 AND CAST(strftime('%Y', r.date) AS INTEGER) = 2005;\t----- bird -----\tformula_1",
  "205": "SELECT\n  r.name\nFROM drivers AS d\nJOIN results AS res\n  ON d.driverId = res.driverId\nJOIN races AS r\n  ON res.raceId = r.raceId\nWHERE\n  d.forename = 'Alex' AND d.surname = 'Yoong' AND res.position < 20;\t----- bird -----\tformula_1",
  "206": "SELECT\n  T1.year,\n  T1.name\nFROM races AS T1\nINNER JOIN results AS T2\n  ON T1.raceId = T2.raceId\nINNER JOIN drivers AS T3\n  ON T2.driverId = T3.driverId\nWHERE\n  T3.forename = 'Michael' AND T3.surname = 'Schumacher'\nORDER BY\n  T2.milliseconds\nLIMIT 1;\t----- bird -----\tformula_1",
  "207": "SELECT\n  T2.name,\n  T1.points\nFROM results AS T1\nINNER JOIN races AS T2\n  ON T1.raceId = T2.raceId\nINNER JOIN drivers AS T3\n  ON T1.driverId = T3.driverId\nWHERE\n  T3.forename = 'Lewis' AND T3.surname = 'Hamilton'\nORDER BY\n  T2.year\nLIMIT 1;\t----- bird -----\tformula_1",
  "208": "SELECT CAST(SUM(CASE WHEN T2.country = 'Germany' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix'\t----- bird -----\tformula_1",
  "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
  "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
  "211": "SELECT nationality FROM drivers ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
  "212": "SELECT\n  T2.driverRef\nFROM races AS T1\nINNER JOIN results AS T3\n  ON T1.raceId = T3.raceId\nINNER JOIN drivers AS T2\n  ON T3.driverId = T2.driverId\nWHERE\n  T1.name = 'Canadian Grand Prix' AND T1.year = 2007 AND T3.positionOrder = 1;\t----- bird -----\tformula_1",
  "213": "SELECT\n  T2.name\nFROM results AS T1\nINNER JOIN races AS T2\n  ON T1.raceId = T2.raceId\nINNER JOIN drivers AS T3\n  ON T1.driverId = T3.driverId\nWHERE\n  T3.forename = 'Lewis' AND T3.surname = 'Hamilton'\nORDER BY\n  T1.rank\nLIMIT 1;\t----- bird -----\tformula_1",
  "214": "SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix')\t----- bird -----\tformula_1",
  "215": "SELECT\n  T1.positionOrder\nFROM results AS T1\nINNER JOIN races AS T2\n  ON T1.raceId = T2.raceId\nINNER JOIN drivers AS T3\n  ON T1.driverId = T3.driverId\nWHERE\n  T2.year = 2008 AND T2.name = 'Chinese Grand Prix' AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton';\t----- bird -----\tformula_1",
  "216": "SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = \"Australian Grand Prix\" AND T1.positionOrder = 2\t----- bird -----\tformula_1",
  "217": "SELECT COUNT(DISTINCT T1.driverId)\nFROM results AS T1\nINNER JOIN races AS T2 ON T1.raceId = T2.raceId\nWHERE T1.raceId = (SELECT raceId FROM races WHERE YEAR = 2008 AND name = 'Chinese Grand Prix')\t----- bird -----\tformula_1",
  "218": "SELECT CAST((T2.milliseconds - T1.milliseconds) AS REAL) * 100 / T2.milliseconds FROM results AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = \"Australian Grand Prix\") AND T1.positionOrder = 1 AND T2.positionOrder = (SELECT MAX(positionOrder) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = \"Australian Grand Prix\"))\t----- bird -----\tformula_1",
  "219": "SELECT COUNT(*) FROM circuits WHERE country = \"Australia\" AND location = \"Adelaide\"\t----- bird -----\tformula_1",
  "220": "SELECT MAX(T2.points) FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = \"British\"\t----- bird -----\tformula_1",
  "221": "SELECT T2.name FROM constructorResults AS T1 JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = 291 AND T1.points = 0\t----- bird -----\tformula_1",
  "222": "SELECT COUNT(DISTINCT T1.constructorId)\nFROM Constructors AS T1\nINNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId\nWHERE T1.nationality = 'Japanese' AND T2.points = 0\nGROUP BY T1.constructorId\nHAVING COUNT(T2.raceId) = 2;\t----- bird -----\tformula_1",
  "223": "SELECT CAST(SUM(CASE WHEN T1.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.driverId) FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.nationality = \"Japanese\" AND T2.year BETWEEN 2007 AND 2009\t----- bird -----\tformula_1",
  "224": "SELECT AVG(CAST(SUBSTR(T1.time, 1, 2) AS INTEGER) * 3600 + CAST(SUBSTR(T1.time, 4, 2) AS INTEGER) * 60 + CAST(SUBSTR(T1.time, 7, 2) AS INTEGER) + CAST(SUBSTR(T1.time, 10, 3) AS REAL) * 0.001) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year < 1975 AND T1.positionOrder = 1 AND T1.time IS NOT NULL\t----- bird -----\tformula_1",
  "225": "SELECT T2.lap FROM results AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId WHERE T1.raceId IN (SELECT raceId FROM races WHERE YEAR = 2009) AND T1.driverId = (SELECT driverId FROM results WHERE raceId IN (SELECT raceId FROM races WHERE YEAR = 2009) ORDER BY positionOrder ASC LIMIT 1) ORDER BY T2.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
  "226": "SELECT AVG(fastestLapSpeed) FROM results WHERE raceId = (SELECT raceId FROM races WHERE YEAR = 2009 AND name = 'Spanish Grand Prix')\t----- bird -----\tformula_1",
  "227": "SELECT\n  CAST(SUM(CASE WHEN T3.dob LIKE '____%' AND substr(T3.dob, 1, 4) < '1985' AND T1.lap > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.driverId)\nFROM lapTimes AS T1\nINNER JOIN races AS T2\n  ON T1.raceId = T2.raceId\nINNER JOIN drivers AS T3\n  ON T1.driverId = T3.driverId\nWHERE\n  T2.year BETWEEN 2000 AND 2005;\t----- bird -----\tformula_1",
  "228": "SELECT COUNT(DISTINCT T1.driverId)\nFROM lapTimes AS T1\nINNER JOIN drivers AS T2 ON T1.driverId = T2.driverId\nWHERE T2.nationality = 'French' AND T1.milliseconds < 120000;\t----- bird -----\tformula_1",
  "229": "SELECT code FROM drivers WHERE nationality = 'American'\t----- bird -----\tformula_1",
  "230": "SELECT\n  SUM(CASE WHEN nationality = 'Dutch' THEN 1 ELSE 0 END)\nFROM (\n  SELECT\n    nationality\n  FROM drivers\n  ORDER BY\n    dob DESC\n  LIMIT 3\n);\t----- bird -----\tformula_1",
  "231": "SELECT driverRef FROM drivers WHERE nationality = \"German\" ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
  "232": "SELECT DISTINCT\n  T1.driverId,\n  T1.code\nFROM drivers AS T1\nINNER JOIN results AS T2\n  ON T1.driverId = T2.driverId\nWHERE\n  STRFTIME('%Y', T1.dob) = '1971' AND T2.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
  "233": "SELECT COUNT(*)\nFROM results\nWHERE raceId > 50\n  AND raceId < 100\n  AND statusId = (\n    SELECT statusId\n    FROM status\n    WHERE status = 'Disqualified'\n  )\n  AND time IS NOT NULL;\t----- bird -----\tformula_1",
  "234": "SELECT COUNT(*), location, lat, lng\nFROM circuits\nWHERE country = \"Austria\"\nGROUP BY location, lat, lng;\t----- bird -----\tformula_1",
  "235": "SELECT\n  T1.year,\n  T1.name,\n  T1.date,\n  T1.time\nFROM races AS T1\nJOIN qualifying AS T2\n  ON T1.raceId = T2.raceId\nJOIN drivers AS T3\n  ON T2.driverId = T3.driverId\nWHERE\n  T3.driverId = (\n    SELECT\n      driverId\n    FROM drivers\n    ORDER BY\n      dob DESC\n    LIMIT 1\n  )\nORDER BY\n  T1.date\nLIMIT 1;\t----- bird -----\tformula_1",
  "236": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = \"German\" AND T1.dob BETWEEN \"1980-01-01\" AND \"1985-12-31\" GROUP BY T1.driverId ORDER BY avg(T2.duration) ASC LIMIT 3\t----- bird -----\tformula_1",
  "237": "SELECT\n  T1.forename,\n  T1.surname,\n  T2.time\nFROM drivers AS T1\nINNER JOIN results AS T2\n  ON T1.driverId = T2.driverId\nINNER JOIN races AS T3\n  ON T2.raceId = T3.raceId\nWHERE\n  T3.year = 2008 AND T3.name = \"Canadian Grand Prix\" AND T2.positionOrder = 1;\t----- bird -----\tformula_1",
  "238": "SELECT\n  T2.constructorRef,\n  T2.url\nFROM races AS T1\nINNER JOIN constructors AS T2\n  ON T1.raceId = T2.constructorId\nINNER JOIN results AS T3\n  ON T1.raceId = T3.raceId\nWHERE\n  T1.year = 2009 AND T1.name = 'Singapore Grand Prix'\nORDER BY\n  T3.time DESC\nLIMIT 1;\t----- bird -----\tformula_1",
  "239": "SELECT\n  T2.power_name\nFROM superhero AS T1\nINNER JOIN hero_power AS T3\n  ON T1.id = T3.hero_id\nINNER JOIN superpower AS T2\n  ON T3.power_id = T2.id\nWHERE\n  T1.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
  "240": "SELECT\n  T2.total_points,\n  T1.name,\n  T1.nationality\nFROM constructors AS T1\nINNER JOIN (\n  SELECT\n    constructorId,\n    SUM(points) AS total_points\n  FROM constructorResults\n  WHERE\n    raceId IN (\n      SELECT\n        raceId\n      FROM races\n      WHERE\n        name = 'Monaco Grand Prix' AND YEAR BETWEEN 1980 AND 2010\n    )\n  GROUP BY\n    constructorId\n  ORDER BY\n    total_points DESC\n  LIMIT 1\n) AS T2\n  ON T1.constructorId = T2.constructorId;\t----- bird -----\tformula_1",
  "241": "SELECT T2.forename, T2.surname FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T3.year = 2008 AND T4.name = \"Marina Bay Street Circuit\" AND T1.position = 1\t----- bird -----\tformula_1",
  "242": "SELECT T1.forename, T1.surname, T1.nationality, T3.name FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId ORDER BY T1.dob DESC, T2.raceId ASC LIMIT 1\t----- bird -----\tformula_1",
  "243": "SELECT COUNT(CASE WHEN T1.name = 'Canadian Grand Prix' THEN 1 ELSE NULL END) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.driverId = ( SELECT T2.driverId FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Canadian Grand Prix' AND T2.statusId = 3 GROUP BY T2.driverId ORDER BY COUNT(*) DESC LIMIT 1 ) AND T2.statusId = 3\t----- bird -----\tformula_1",
  "244": "SELECT DISTINCT\n  T1.forename,\n  T1.surname\nFROM drivers AS T1\nINNER JOIN lapTimes AS T2\n  ON T1.driverId = T2.driverId\nORDER BY\n  T2.time\nLIMIT 20;\t----- bird -----\tformula_1",
  "245": "SELECT MIN(T1.time) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = \"Italy\"\t----- bird -----\tformula_1",
  "246": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = \"Super Strength\" AND T1.height_cm > 200\t----- bird -----\tsuperhero",
  "247": "SELECT\n  COUNT(T1.id)\nFROM superhero AS T1\nINNER JOIN colour AS T2\n  ON T1.eye_colour_id = T2.id\nINNER JOIN hero_power AS T3\n  ON T1.id = T3.hero_id\nINNER JOIN superpower AS T4\n  ON T3.power_id = T4.id\nWHERE\n  T2.colour = 'Blue' AND T4.power_name = 'Agility';\t----- bird -----\tsuperhero",
  "248": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'\t----- bird -----\tsuperhero",
  "249": "SELECT\n  T1.superhero_name\nFROM superhero AS T1\nINNER JOIN publisher AS T2\n  ON T1.publisher_id = T2.id\nWHERE\n  T2.publisher_name = 'Marvel Comics'\nORDER BY\n  T1.height_cm DESC;\t----- bird -----\tsuperhero",
  "250": "SELECT T1.colour FROM colour AS T1 JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.publisher_id = (SELECT id FROM publisher WHERE publisher_name = \"Marvel Comics\") GROUP BY T1.colour ORDER BY count(T2.id) DESC\t----- bird -----\tsuperhero",
  "251": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T3.power_name = \"Super Strength\" AND T4.publisher_name = \"Marvel Comics\"\t----- bird -----\tsuperhero",
  "252": "SELECT T2.publisher_name FROM hero_attribute AS T1 INNER JOIN publisher AS T2 INNER JOIN superhero AS T3 INNER JOIN attribute AS T4 ON T1.hero_id = T3.id AND T2.id = T3.publisher_id AND T1.attribute_id = T4.id WHERE T4.attribute_name = 'Speed' ORDER BY T1.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
  "253": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = \"Gold\" AND T3.publisher_name = \"Marvel Comics\"\t----- bird -----\tsuperhero",
  "254": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence' ORDER BY T2.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
  "255": "SELECT\n  T1.race\nFROM race AS T1\nINNER JOIN superhero AS T2\n  ON T1.id = T2.race_id\nWHERE\n  T2.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
  "256": "SELECT T1.superhero_name FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Durability' AND T2.attribute_value < 50\t----- bird -----\tsuperhero",
  "257": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = \"Death Touch\"\t----- bird -----\tsuperhero",
  "258": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN gender AS T3 ON T1.gender_id = T3.id INNER JOIN attribute AS T4 ON T2.attribute_id = T4.id WHERE T3.gender = \"Female\" AND T4.attribute_name = \"Strength\" AND T2.attribute_value = 100\t----- bird -----\tsuperhero",
  "259": "SELECT\n  CAST(SUM(CASE WHEN T2.alignment = 'bad' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id),\n  SUM(CASE WHEN T2.alignment = 'bad' AND T3.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END)\nFROM superhero AS T1\nINNER JOIN alignment AS T2\n  ON T1.alignment_id = T2.id\nINNER JOIN publisher AS T3\n  ON T1.publisher_id = T3.id;\t----- bird -----\tsuperhero",
  "260": "SELECT\n  (\n    SELECT\n      COUNT(*)\n    FROM superhero AS t1\n    INNER JOIN publisher AS t2\n      ON t1.publisher_id = t2.id\n    WHERE\n      t2.publisher_name = 'Marvel Comics'\n  ) - (\n    SELECT\n      COUNT(*)\n    FROM superhero AS t1\n    INNER JOIN publisher AS t2\n      ON t1.publisher_id = t2.id\n    WHERE\n      t2.publisher_name = 'DC Comics'\n  );\t----- bird -----\tsuperhero",
  "261": "SELECT id FROM publisher WHERE publisher_name = \"Star Trek\"\t----- bird -----\tsuperhero",
  "262": "SELECT count(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
  "263": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = \"Female\"\t----- bird -----\tsuperhero",
  "264": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id INNER JOIN gender AS T4 ON T3.gender_id = T4.id WHERE T4.gender = \"Male\" GROUP BY T1.power_name LIMIT 5\t----- bird -----\tsuperhero",
  "265": "SELECT superhero_name\nFROM superhero\nWHERE height_cm BETWEEN 170 AND 190\n  AND eye_colour_id IN (SELECT id FROM colour WHERE colour = 'No Colour');\t----- bird -----\tsuperhero",
  "266": "SELECT T1.colour FROM colour AS T1 JOIN superhero AS T2 ON T1.id = T2.hair_colour_id JOIN race AS T3 ON T2.race_id = T3.id WHERE T3.race = 'Human' AND T2.height_cm = 185\t----- bird -----\tsuperhero",
  "267": "SELECT CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
  "268": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = \"Male\" AND T1.weight_kg > (SELECT avg(Weight_Kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
  "269": "SELECT\n  T2.power_name\nFROM hero_power AS T1\nINNER JOIN superpower AS T2\n  ON T1.power_id = T2.id\nWHERE\n  T1.hero_id = 1;\t----- bird -----\tsuperhero",
  "270": "SELECT COUNT(T1.hero_id) FROM hero_power AS T1 JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Stealth'\t----- bird -----\tsuperhero",
  "271": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = \"strength\" ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
  "272": "SELECT\n  T1.superhero_name\nFROM superhero AS T1\nINNER JOIN hero_attribute AS T2\n  ON T1.id = T2.hero_id\nINNER JOIN attribute AS T3\n  ON T2.attribute_id = T3.id\nINNER JOIN publisher AS T4\n  ON T1.publisher_id = T4.id\nWHERE\n  T3.attribute_name = 'Durability' AND T4.publisher_name = 'Dark Horse Comics'\nORDER BY\n  T2.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
  "273": "SELECT\n  T1.colour AS eye_colour,\n  T2.colour AS hair_colour,\n  T3.colour AS skin_colour\nFROM superhero AS T0\nINNER JOIN colour AS T1\n  ON T0.eye_colour_id = T1.id\nINNER JOIN colour AS T2\n  ON T0.hair_colour_id = T2.id\nINNER JOIN colour AS T3\n  ON T0.skin_colour_id = T3.id\nINNER JOIN gender AS T4\n  ON T0.gender_id = T4.id\nINNER JOIN publisher AS T5\n  ON T0.publisher_id = T5.id\nWHERE\n  T4.gender = 'Female' AND T5.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
  "274": "SELECT T2.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.hair_colour_id = T1.skin_colour_id AND T1.hair_colour_id = T1.eye_colour_id\t----- bird -----\tsuperhero",
  "275": "SELECT CAST(SUM(CASE WHEN T1.eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
  "276": "SELECT COUNT(T2.power_id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = \"Amazo\"\t----- bird -----\tsuperhero",
  "277": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'\t----- bird -----\tsuperhero",
  "278": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Black' AND T3.colour = 'Black'\t----- bird -----\tsuperhero",
  "279": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = \"Neutral\"\t----- bird -----\tsuperhero",
  "280": "SELECT COUNT(T1.hero_id) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id  =  T2.id WHERE T2.attribute_name  =  'Strength' AND T1.attribute_value  =  (SELECT max(attribute_value) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id  =  T2.id WHERE T2.attribute_name  =  'Strength')\t----- bird -----\tsuperhero",
  "281": "SELECT CAST(SUM(CASE WHEN T1.gender = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.id) FROM gender AS T1 INNER JOIN superhero AS T3 ON T1.id = T3.gender_id INNER JOIN publisher AS T2 ON T3.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
  "282": "SELECT (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler');\t----- bird -----\tsuperhero",
  "283": "SELECT AVG(height_cm) FROM superhero\t----- bird -----\tsuperhero",
  "284": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.superhero_name = \"Abomination\"\t----- bird -----\tsuperhero",
  "285": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = \"Speed\" ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
  "286": "SELECT\n  T1.attribute_name,\n  T2.attribute_value\nFROM attribute AS T1\nINNER JOIN hero_attribute AS T2\n  ON T1.id = T2.attribute_id\nINNER JOIN superhero AS T3\n  ON T2.hero_id = T3.id\nWHERE\n  T3.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
  "287": "SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = \"Blue\") AND hair_colour_id = (SELECT id FROM colour WHERE colour = \"Brown\")\t----- bird -----\tsuperhero",
  "288": "SELECT T2.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
  "289": "SELECT CAST(SUM(CASE WHEN T2.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id\t----- bird -----\tsuperhero",
  "290": "SELECT CAST(SUM(CASE WHEN T1.gender_id = 2 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.gender_id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1\t----- bird -----\tsuperhero",
  "291": "SELECT T2.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = \"Karen Beecher-Duncan\"\t----- bird -----\tsuperhero",
  "292": "SELECT SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 WHERE T1.weight_kg IS NULL OR T1.weight_kg = 0\t----- bird -----\tsuperhero",
  "293": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.colour = 'Green' AND T3.alignment = 'bad'\t----- bird -----\tsuperhero",
  "294": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name\t----- bird -----\tsuperhero",
  "295": "SELECT\n  T1.gender\nFROM gender AS T1\nINNER JOIN superhero AS T2\n  ON T1.id = T2.gender_id\nINNER JOIN hero_power AS T3\n  ON T2.id = T3.hero_id\nINNER JOIN superpower AS T4\n  ON T3.power_id = T4.id\nWHERE\n  T4.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
  "296": "SELECT (SELECT count(*) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id  =  T2.id WHERE T2.publisher_name  =  'DC Comics') - (SELECT count(*) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id  =  T2.id WHERE T2.publisher_name  =  'Marvel Comics');\t----- bird -----\tsuperhero",
  "297": "SELECT\n  CASE\n    WHEN (\n      SELECT\n        Reputation\n      FROM users\n      WHERE\n        DisplayName = 'Harlan'\n    ) > (\n      SELECT\n        Reputation\n      FROM users\n      WHERE\n        DisplayName = 'Jarrod Dixon'\n    )\n    THEN 'Harlan'\n    ELSE 'Jarrod Dixon'\n  END;\t----- bird -----\tcodebase_community"
}